{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Music.ipynb",
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "rqkErP7dWOEU"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "\n",
        "data=pd.read_csv('music.csv')"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **Data Preprocessing** "
      ],
      "metadata": {
        "id": "fcoiSZs3210J"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "data"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 614
        },
        "id": "bViMzSijWjxB",
        "outputId": "db848635-8af1-4af8-f9d4-b62dce4016c9"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    age  gender      genre\n",
              "0    20       1     HipHop\n",
              "1    23       1     HipHop\n",
              "2    25       1     HipHop\n",
              "3    26       1       Jazz\n",
              "4    29       1       Jazz\n",
              "5    30       1       Jazz\n",
              "6    31       1  Classical\n",
              "7    33       1  Classical\n",
              "8    37       1  Classical\n",
              "9    20       0      Dance\n",
              "10   21       0      Dance\n",
              "11   25       0      Dance\n",
              "12   26       0   Acoustic\n",
              "13   27       0   Acoustic\n",
              "14   30       0   Acoustic\n",
              "15   31       0  Classical\n",
              "16   34       0  Classical\n",
              "17   35       0  Classical"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e8a231da-1dcd-4b06-b6ca-708bfbabd948\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>age</th>\n",
              "      <th>gender</th>\n",
              "      <th>genre</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>20</td>\n",
              "      <td>1</td>\n",
              "      <td>HipHop</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>23</td>\n",
              "      <td>1</td>\n",
              "      <td>HipHop</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>25</td>\n",
              "      <td>1</td>\n",
              "      <td>HipHop</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>26</td>\n",
              "      <td>1</td>\n",
              "      <td>Jazz</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>29</td>\n",
              "      <td>1</td>\n",
              "      <td>Jazz</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>30</td>\n",
              "      <td>1</td>\n",
              "      <td>Jazz</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>31</td>\n",
              "      <td>1</td>\n",
              "      <td>Classical</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>33</td>\n",
              "      <td>1</td>\n",
              "      <td>Classical</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>37</td>\n",
              "      <td>1</td>\n",
              "      <td>Classical</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>20</td>\n",
              "      <td>0</td>\n",
              "      <td>Dance</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>21</td>\n",
              "      <td>0</td>\n",
              "      <td>Dance</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>25</td>\n",
              "      <td>0</td>\n",
              "      <td>Dance</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>26</td>\n",
              "      <td>0</td>\n",
              "      <td>Acoustic</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>27</td>\n",
              "      <td>0</td>\n",
              "      <td>Acoustic</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>30</td>\n",
              "      <td>0</td>\n",
              "      <td>Acoustic</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>31</td>\n",
              "      <td>0</td>\n",
              "      <td>Classical</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>34</td>\n",
              "      <td>0</td>\n",
              "      <td>Classical</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>35</td>\n",
              "      <td>0</td>\n",
              "      <td>Classical</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e8a231da-1dcd-4b06-b6ca-708bfbabd948')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-e8a231da-1dcd-4b06-b6ca-708bfbabd948 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-e8a231da-1dcd-4b06-b6ca-708bfbabd948');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "zmiNYZTW5rud",
        "outputId": "c143ae98-e8e3-4024-c091-964a0e8c023e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   age  gender   genre\n",
              "0   20       1  HipHop\n",
              "1   23       1  HipHop\n",
              "2   25       1  HipHop\n",
              "3   26       1    Jazz\n",
              "4   29       1    Jazz"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-1e7c27cb-f2db-474c-b47f-4e2c38b55ff1\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>age</th>\n",
              "      <th>gender</th>\n",
              "      <th>genre</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>20</td>\n",
              "      <td>1</td>\n",
              "      <td>HipHop</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>23</td>\n",
              "      <td>1</td>\n",
              "      <td>HipHop</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>25</td>\n",
              "      <td>1</td>\n",
              "      <td>HipHop</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>26</td>\n",
              "      <td>1</td>\n",
              "      <td>Jazz</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>29</td>\n",
              "      <td>1</td>\n",
              "      <td>Jazz</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1e7c27cb-f2db-474c-b47f-4e2c38b55ff1')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-1e7c27cb-f2db-474c-b47f-4e2c38b55ff1 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-1e7c27cb-f2db-474c-b47f-4e2c38b55ff1');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 45
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.tail()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "aI24TkpsWsQq",
        "outputId": "5ccc2cd8-7844-4fe3-a0f0-e1a9e1b6e115"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    age  gender      genre\n",
              "13   27       0   Acoustic\n",
              "14   30       0   Acoustic\n",
              "15   31       0  Classical\n",
              "16   34       0  Classical\n",
              "17   35       0  Classical"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-be484ab6-7687-4be2-bf6d-5a668832504c\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>age</th>\n",
              "      <th>gender</th>\n",
              "      <th>genre</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>27</td>\n",
              "      <td>0</td>\n",
              "      <td>Acoustic</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>30</td>\n",
              "      <td>0</td>\n",
              "      <td>Acoustic</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>31</td>\n",
              "      <td>0</td>\n",
              "      <td>Classical</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>34</td>\n",
              "      <td>0</td>\n",
              "      <td>Classical</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>35</td>\n",
              "      <td>0</td>\n",
              "      <td>Classical</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-be484ab6-7687-4be2-bf6d-5a668832504c')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-be484ab6-7687-4be2-bf6d-5a668832504c button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-be484ab6-7687-4be2-bf6d-5a668832504c');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Xri9SgPSXAzL",
        "outputId": "484e9ae9-b52c-4665-f766-e8f6c1b035e1"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(18, 3)"
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.dtypes"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "3EW9fNItXgMR",
        "outputId": "b1112527-a845-4509-f9e7-51efbffe6fad"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "age        int64\n",
              "gender     int64\n",
              "genre     object\n",
              "dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data['genre'].unique()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "NyOm0DOwYQUy",
        "outputId": "d64661a3-6dfa-4971-818f-98941e42ab65"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['HipHop', 'Jazz', 'Classical', 'Dance', 'Acoustic'], dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data['genre'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "6mwFojmR3G-j",
        "outputId": "9e0eb892-f964-4630-8ffd-682fd20ce3ae"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Classical    6\n",
              "HipHop       3\n",
              "Jazz         3\n",
              "Dance        3\n",
              "Acoustic     3\n",
              "Name: genre, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 31
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.bar(x=data['gender'],height=data['age'])\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 265
        },
        "id": "bn8YpIYb5aPj",
        "outputId": "e6bfd15a-8b1e-4f67-ef36-b9233a613d79"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## **Dependant and Indepandant values**"
      ],
      "metadata": {
        "id": "cszJdCah3fPX"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "X,y=data.loc[:,:'gender'],data.loc[:,'genre']"
      ],
      "metadata": {
        "id": "_ngLJmxKY8-f"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "X"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 614
        },
        "id": "5sn57nHI3rsS",
        "outputId": "01acf6a5-987c-4c36-f54a-137a1cb584a6"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    age  gender\n",
              "0    20       1\n",
              "1    23       1\n",
              "2    25       1\n",
              "3    26       1\n",
              "4    29       1\n",
              "5    30       1\n",
              "6    31       1\n",
              "7    33       1\n",
              "8    37       1\n",
              "9    20       0\n",
              "10   21       0\n",
              "11   25       0\n",
              "12   26       0\n",
              "13   27       0\n",
              "14   30       0\n",
              "15   31       0\n",
              "16   34       0\n",
              "17   35       0"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-dcc93245-a0bf-4855-b7db-bcd06452c408\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>age</th>\n",
              "      <th>gender</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>20</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>23</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>25</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>26</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>29</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>30</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>31</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>33</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>37</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>20</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>21</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>25</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>26</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>27</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>30</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>31</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>34</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>35</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dcc93245-a0bf-4855-b7db-bcd06452c408')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-dcc93245-a0bf-4855-b7db-bcd06452c408 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-dcc93245-a0bf-4855-b7db-bcd06452c408');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 32
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "y"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "nyzuucEBZNoA",
        "outputId": "e89f880e-2ebf-4a5c-a6bf-8f2be50afbb1"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0        HipHop\n",
              "1        HipHop\n",
              "2        HipHop\n",
              "3          Jazz\n",
              "4          Jazz\n",
              "5          Jazz\n",
              "6     Classical\n",
              "7     Classical\n",
              "8     Classical\n",
              "9         Dance\n",
              "10        Dance\n",
              "11        Dance\n",
              "12     Acoustic\n",
              "13     Acoustic\n",
              "14     Acoustic\n",
              "15    Classical\n",
              "16    Classical\n",
              "17    Classical\n",
              "Name: genre, dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **Building Model**"
      ],
      "metadata": {
        "id": "yvQhBY4k30gb"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.model_selection import train_test_split"
      ],
      "metadata": {
        "id": "0H533LbQYnjX"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "X_train,X_test,y_train,y_test=train_test_split(X,y,random_state=10,test_size=0.3,shuffle=True)"
      ],
      "metadata": {
        "id": "V-05ecTOZWcw"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.tree import DecisionTreeClassifier\n",
        "dt=DecisionTreeClassifier()\n",
        "dt.fit(X_train,y_train)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "BIC4mI-rZinw",
        "outputId": "5d683350-6230-490a-987c-1a1439d95561"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "DecisionTreeClassifier()"
            ]
          },
          "metadata": {},
          "execution_count": 15
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "prediction=dt.predict(X_test)"
      ],
      "metadata": {
        "id": "dZnUkVKaZ1R3"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.metrics import accuracy_score"
      ],
      "metadata": {
        "id": "kpNAfhpLZ3ST"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "accuracy_dt=accuracy_score(y_test,prediction)*100\n",
        "accuracy_dt\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "52aavorWaE2q",
        "outputId": "a3f24be7-0925-4bbb-b1d6-5194852576ab"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "100.0"
            ]
          },
          "metadata": {},
          "execution_count": 18
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data['age']"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "9-AmM8dP2EDG",
        "outputId": "5d914bad-0a36-4a5a-d5c2-83bf356b2d63"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0     20\n",
              "1     23\n",
              "2     25\n",
              "3     26\n",
              "4     29\n",
              "5     30\n",
              "6     31\n",
              "7     33\n",
              "8     37\n",
              "9     20\n",
              "10    21\n",
              "11    25\n",
              "12    26\n",
              "13    27\n",
              "14    30\n",
              "15    31\n",
              "16    34\n",
              "17    35\n",
              "Name: age, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 28
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gender=int(input(\"Enter Gender(0-Male,1-Female): \"))\n",
        "age=int(input(\"Enter age: \"))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "nxW8D6vD4ZcG",
        "outputId": "7ff0d60b-23b6-43dd-ce7d-ef87c23fab2e"
      },
      "execution_count": null,
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Enter Gender(0-Male,1-Female)0\n",
            "Enter age:20\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#age and gender as input\n",
        "X_DT=np.array([[age,gender]])\n",
        "X_DT_prediction=dt.predict(X_DT)\n",
        "predictd=X_DT_prediction[0]\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "kWBDK8xTae6f",
        "outputId": "c5c1f6c0-bd6a-40e2-aa39-b4916f230d8b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/base.py:451: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names\n",
            "  \"X does not have valid feature names, but\"\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"Predicted Music Genre: \",predictd)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "bKEa-ATUaoy4",
        "outputId": "360cc99c-1a26-4780-b833-7a5dc76f7314"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Predicted Music Genre:  Dance\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        ""
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 265
        },
        "id": "VkxH9VhNz7as",
        "outputId": "85a7579d-1692-4782-fff3-70d4b7cd3bfc"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        ""
      ],
      "metadata": {
        "id": "BnFjlZJp1u6X"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}